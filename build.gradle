buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: 'com.lhmtech.build', name: 'ci-plugin', version: '1.0.12')
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'com.lhmtech.build.ciplugin'

version=buildVersionManager.readBuild()

ext { appName = 'messaging'}
group 'com.lhmtech.integration'
jar {
    baseName = "$appName"
    libsDirName = "libs/com/lhmtech/integration/${appName}/${version}"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

//1. exclude commons-logging
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
//    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: '1.1.6.RELEASE'
//    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '1.0.9.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib:3.2.1'
}

test {
    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "Test result: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} succeeded, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}


buildscript {
    repositories {
        maven {
            url "${artifactory_contextUrl}/plugins-release"

        }

    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'libs-release-local'
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true

        }
    }
}


apply from: 'tests.gradle'
